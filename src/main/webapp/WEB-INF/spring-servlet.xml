<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-4.2.xsd
					http://www.springframework.org/schema/context classpath:org/springframework/context/config/spring-context-4.2.xsd
					http://www.springframework.org/schema/mvc classpath:org/springframework/web/servlet/config/spring-mvc-4.2.xsd"
	default-lazy-init="false" default-autowire="byName">
	<context:component-scan base-package="com.**.control,com.**.job"/>
	<!--<context:property-placeholder location="classpath:init.properties"/>-->


	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:init.properties</value>
				<value>classpath:pay.properties</value>
			</list>
		</property>
	</bean>



	<bean id="handlerMappingAdapter" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" p:ignoreDefaultModelOnRedirect="true">
		<property name="messageConverters">
			<list>
				<!-- 解析json请求数据，将json转换为java对象 -->
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
				<!-- 解析xml请求数据，将xml转换为java对象 -->
				<bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter" p:marshaller-ref="jaxbMarshall" p:unmarshaller-ref="jaxbMarshall">
					<property name="supportedMediaTypes" value="application/xml"/>
				</bean>
				<bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
				<bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
				<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
				<!-- 自定义转换器，解决@ResponseBody返回类型中文乱码问题 -->
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
							<value>text/html;charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
				<!--可以增加其他数据类型,请参考spring的API -->
			</list>
		</property>
		<property name="customArgumentResolvers">
			<list>
				<bean class="com.ecarry.core.web.core.CustomMethodArgumentsResolver"/>
			</list>
		</property>
		<property name="webBindingInitializer">
			<bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
				<property name="propertyEditorRegistrars">
					<list>
						<bean class="com.ecarry.core.web.core.DataEditorRegistrar"/>
					</list>
				</property>
			</bean>
		</property>
	</bean>
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="mediaTypes"> <!--扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用 -->
			<props>
				<prop key="json">application/json</prop>
				<prop key="xml">application/xml</prop>
				<prop key="io">application/octet-stream</prop>
				<prop key="do">text/html</prop>
				<prop key="html">text/html</prop>
				<prop key="jsp">text/html</prop>
				<prop key="txt">text/plain</prop>
				<prop key="file">text/plain</prop>
			</props>
		</property>
		<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="favorPathExtension" value="true"/>
		<!-- 用于开启 /userinfo/123?format=json 的支持 -->
		<property name="favorParameter" value="true"/>
		<property name="parameterName" value="format"/>
		<!-- 是否忽略Accept Header -->
		<property name="ignoreAcceptHeader" value="true"/>
		<!-- 默认的content type -->
		<property name="defaultContentType" value="application/json"/>
	</bean>
	<bean id="viewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1"/>
		<property name="contentNegotiationManager" ref="contentNegotiationManager"/>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
				</bean>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<!-- 处理json的映射 -->
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<property name="objectMapper" ref="objectMapper"/>
				</bean>
				<!-- 处理xml的映射 -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller" ref="jaxbMarshall"/>
				</bean>
			</list>
		</property>
	</bean>
	<bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper">
		<property name="filters">
			<bean class="com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider">
				<property name="failOnUnknownId" value="false"/>
			</bean>
		</property>
		<!-- 去除NULL属性 -->
		<property name="serializationInclusion">
			<value type="com.fasterxml.jackson.annotation.JsonInclude$Include">NON_NULL</value>
		</property>
	</bean>
	<bean id="resourceResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
		<property name="basename" value="views"/>
	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="314572800"/>
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
	<bean id="exceptionResolver" class="com.vendor.handler.MappingExceptionResolver">
		<property name="defaultErrorView" value="json"/>
		<property name="statusCodes">
			<props>
				<prop key="json">400</prop>
			</props>
		</property>
	</bean>
	<bean id="paramResolver" class="org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver">
		<property name="paramName" value="method"/>
	</bean>
	<mvc:default-servlet-handler/>
	<mvc:annotation-driven/>
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**/find*"/>
			<bean class="com.vendor.util.PageInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>